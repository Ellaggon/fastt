---
import Layout from "@/layouts/Layout.astro"
import { db, eq, User } from "astro:db"
import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)
if (!session) return Astro.redirect("/SignInPage")
let providerId = ""

// Si hay una sesión activa, busca el usuario y su providerId
if (session?.user?.email) {
	const user = await db.select().from(User).where(eq(User.email, session.user.email)).get()

	if (user?.providerId) {
		providerId = user.providerId
	} else {
		console.error("No se encontró providerId para el usuario:", session.user.email)
		return Astro.redirect("/provider")
	}
}
---

<Layout title="Crear Nuevo Producto">
	<article
		class="mx-auto mt-20 w-10/12 rounded-2xl border border-neutral-300 bg-neutral-200 p-8 text-neutral-800 shadow-lg sm:p-10 md:max-w-lg lg:max-w-2xl lg:p-20"
	>
		<h2 class="mb-2 text-2xl font-semibold">CREAR NUEVO PRODUCTO</h2>
		<p class="mb-8 text-xs text-neutral-500">
			Ingresa la información básica de tu producto (Hotel, Tour, etc.).
		</p>
		<form id="productForm" method="post" class="flex flex-col gap-4" data-form-type="product">
			{/* <!-- providerId - campo oculto --> */}
			<input type="hidden" name="providerId" value={providerId} />

			{/* <!-- name --> */}
			<label for="name" class="block text-xs font-medium text-neutral-500 md:text-sm">
				Nombre del Producto
				<input
					type="text"
					id="name"
					name="name"
					placeholder="Ej: Tour al desierto de Uyuni"
					class="mt-2 block w-full rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-neutral-800 placeholder-neutral-400 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 sm:text-sm"
					required
				/>
			</label>

			{/* <!-- productType --> */}
			<label for="productType" class="block text-xs font-medium text-neutral-500 md:text-sm">
				Tipo de Producto
				<select
					name="productType"
					id="productType"
					class="mt-2 block w-full cursor-pointer rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-sm font-medium text-neutral-800 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500"
					required
				>
					<option value="">Selecciona un tipo...</option>
					<option value="Hotel">Hotel</option>
					<option value="Tour">Tour</option>
					<option value="Package">Paquete</option>
				</select>
			</label>

			{/* <!-- shortDescription --> */}
			<label for="shortDescription" class="block text-xs font-medium text-neutral-500 md:text-sm">
				Descripción Corta
				<textarea
					name="shortDescription"
					id="shortDescription"
					rows="2"
					placeholder="Resumen del producto en una frase"
					class="mt-2 block w-full rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-neutral-800 placeholder-neutral-400 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 sm:text-sm"
				></textarea>
			</label>

			{/* <!-- longDescription --> */}
			<label for="longDescription" class="block text-xs font-medium text-neutral-500 md:text-sm">
				Descripción Completa
				<textarea
					name="longDescription"
					id="longDescription"
					rows="5"
					placeholder="Describe los detalles completos del producto"
					class="mt-2 block w-full rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-neutral-800 placeholder-neutral-400 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 sm:text-sm"
				></textarea>
			</label>

			{/* <!-- departmentId --> */}
			<label class="block text-xs font-medium text-neutral-500 md:text-sm">
				Departamento/region
				<select
					name="departmentId"
					id="departmentId"
					class="mt-2 block w-full cursor-pointer rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-sm font-medium text-neutral-800 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500"
					required
				>
					<option value="">Selecciona una ciudad...</option>
					<option value="la-paz">La Paz</option>
					<option value="santa-cruz">Santa Cruz</option>
					<option value="cochabamba">Cochabamba</option>
					<option value="oruro">Oruro</option>
					<option value="potosi">Potosí</option>
					<option value="sucre">Sucre</option>
					<option value="tarija">Tarija</option>
					<option value="beni">Beni</option>
					<option value="pando">Pando</option>
				</select>
			</label>

			{/* <!-- destinationId --> */}
			<label
				for="destinationInput"
				class="relative block text-xs font-medium text-neutral-500 md:text-sm"
			>
				Ciudad/localidad
				<input
					id="destinationInput"
					name="destinationQuery"
					autocomplete="off"
					type="search"
					class="mt-2 block w-full rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-neutral-800 placeholder-neutral-400 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 sm:text-sm"
					placeholder="Ej: Uyuni"
				/>
				<input type="hidden" name="destinationId" id="destinationId" />
				<ul
					id="destinationsList"
					class="absolute left-0 right-0 z-50 mt-1 hidden max-h-56 overflow-auto rounded border bg-white"
				>
				</ul>
			</label>

			{/* <!-- basePriceUSD --> */}
			<label for="basePriceUSD" class="block text-xs font-medium text-neutral-500 md:text-sm">
				Precio Base (USD)
				<input
					type="number"
					id="basePriceUSD"
					name="basePriceUSD"
					placeholder="Precio en dólares"
					class="mt-2 block w-full rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-neutral-800 placeholder-neutral-400 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 sm:text-sm"
					required
				/>
			</label>

			{/* <!-- basePriceBOB --> */}
			<label for="basePriceBOB" class="block text-xs font-medium text-neutral-500 md:text-sm">
				Precio Base (BOB)
				<input
					type="number"
					id="basePriceBOB"
					name="basePriceBOB"
					placeholder="Precio en pesos bolivianos"
					class="mt-2 block w-full rounded-lg border-transparent bg-neutral-100 px-4 py-3 text-neutral-800 placeholder-neutral-400 shadow-sm transition-colors duration-200 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-500 sm:text-sm"
					required
				/>
			</label>

			{/* Subida de imágenes (IDs únicos) */}
			<div class="relative">
				<label
					for="imageUpload-product"
					class="block text-xs font-medium text-neutral-500 md:text-sm"
				>
					Imágenes del producto
				</label>
				<div
					id="dropZone-product"
					class="dropZone transitions-colors mt-2 flex min-h-64 w-full cursor-pointer flex-col items-center justify-center overflow-auto rounded-lg bg-neutral-900/50 text-center backdrop-blur-sm duration-300 hover:bg-neutral-900/70 hover:text-white"
				>
					<p id="imageText-product" class="flex flex-col gap-2 text-xs md:text-sm">
						<span>Arrastra y suelta o haz click</span>
					</p>
					<input
						type="file"
						class="hidden"
						id="imageUpload-product"
						name="imageUpload-product"
						accept="image/*"
						multiple
					/>
					{/* <div id="imagePreview-product" class="hidden gap-3 sm:m-6" /> */}
					<div id="imagePreview" class="flex flex-wrap gap-2"></div>
				</div>
				<span class="error mt-3 text-sm text-red-500" data-error-for="imagesMeta"></span>
			</div>

			<div class="mt-10 flex justify-end">
				<button
					type="submit"
					class="h-10 w-40 rounded-lg bg-blue-600 px-4 py-1 font-medium text-white shadow-md transition-colors duration-200 hover:bg-blue-700"
				>
					Siguiente
				</button>
			</div>
		</form>
	</article>

	<script type="module">
		const qs = (selector, el = document) => el.querySelector(selector)

		function debounce(fn, wait = 200) {
			let t
			return (...args) => {
				clearTimeout(t)
				t = setTimeout(() => fn(...args), wait)
			}
		}

		document.addEventListener("DOMContentLoaded", () => {
			const destInput = qs("#destinationInput")
			const destList = qs("#destinationsList")
			const destIdInput = qs("#destinationId")

			if (!destInput || !destList || !destIdInput) return

			// DESTINATIONS AUTOCOMPLETE
			async function fetchDestinations(q) {
				try {
					const res = await fetch(`/api/destinations?q=${encodeURIComponent(q)}&limit=8`)
					if (!res.ok) return []
					const data = await res.json()
					return Array.isArray(data) ? data : []
				} catch (e) {
					console.error("fetchDestinations error:", e)
					return []
				}
			}

			function renderDestinations(items) {
				destList.innerHTML = ""
				if (!items || items.length === 0) {
					destList.classList.add("hidden")
					return
				}
				for (const d of items) {
					const li = document.createElement("li")
					li.tabIndex = 0
					li.className = "px-3 py-2 hover:bg-neutral-100 cursor-pointer"
					li.dataset.id = d.id
					li.dataset.slug = d.slug || ""
					li.dataset.lat = d.latitude ?? d.lat ?? ""
					li.dataset.lng = d.longitude ?? d.lng ?? ""
					// texto legible: Ciudad, Departamento — País
					// const dept = d.department || d.departmentName || ""
					// const country = d.country || ""
					li.textContent = `${d.name}`
					destList.appendChild(li)
				}
				destList.classList.remove("hidden")
			}

			destList.addEventListener("click", (ev) => {
				const li = ev.target.closest("li")
				if (!li) return
				chooseDestination(li)
			})

			destList.addEventListener("keydown", (ev) => {
				if (ev.key === "Enter") {
					const li = ev.target.closest("li")
					if (li) chooseDestination(li)
				}
			})

			function chooseDestination(li) {
				const id = li.dataset.id
				const name = li.textContent
				destInput.value = name
				destIdInput.value = id
				destList.classList.add("hidden")
			}

			const debouncedSearch = debounce(async (value) => {
				if (!value || value.trim().length < 1) {
					destList.classList.add("hidden")
					return
				}
				const items = await fetchDestinations(value.trim())
				renderDestinations(items)
			}, 180)

			destInput.addEventListener("input", (e) => {
				destIdInput.value = "" // clear selection if user types
				debouncedSearch(e.target.value)
			})

			// close suggestions on outside click
			document.addEventListener("click", (e) => {
				if (!e.target.closest("#destinationInput") && !e.target.closest("#destinationsList")) {
					destList.classList.add("hidden")
				}
			})
		})
	</script>

	<script src="/src/lib/forms/productFormHandler"></script>
</Layout>
