---
import ProductBaseForm from "@/components/forms/ProductBaseForm.astro"
import Layout from "@/layouts/Layout.astro"
import { getProductWithImagesAndSubtype } from "@/lib/db/product"
import { getProviderIdFromRequest } from "@/lib/db/provider"
import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)
const paramsId = Astro.params.id

if (!session?.user?.email) return Astro.redirect("/SignInPage")
if (!paramsId) return Astro.redirect("/dashboard")

const providerId = await getProviderIdFromRequest(Astro.request)
if (!providerId) return Astro.redirect("/forms/provider?message=not_registered")

const productBundle = await getProductWithImagesAndSubtype(paramsId)
if (!productBundle) return Astro.redirect("/dashboard")

// seguridad: verificar que el product pertenezca al provider
if (String(productBundle.product.providerId) !== String(providerId)) {
	return Astro.redirect("/dashboard")
}

// props para el cliente
const product = productBundle.product
---

<Layout title={`Editar · ${product.name || "Producto"}`}>
	<div
		class="mx-auto mt-20 w-11/12 rounded-2xl border border-neutral-300 bg-neutral-200 p-8 text-neutral-800 shadow-lg sm:p-10 md:max-w-3xl lg:p-20"
	>
		<h1 class="mb-2 text-2xl font-semibold">Editar Producto</h1>
		<p class="mb-6 text-sm text-neutral-500">Modifica la información base de tu producto.</p>

		<!-- Formulario: POST a tu endpoint centralizado -->
		<form
			id="productUpdateForm"
			method="POST"
			action={`/api/products/${product.id}/update`}
			class="flex flex-col gap-6"
		>
			<ProductBaseForm product={product} />

			<!-- hidden input where we will place JSON for subtype -->
			<input type="hidden" name="subtype" id="subtypeInput" value="" />

			<div class="mt-4 flex justify-end gap-4">
				<a
					href={`/products/${product.id}`}
					class="rounded-lg border border-neutral-400 bg-white px-5 py-2 text-sm font-medium text-neutral-700 shadow-sm transition hover:bg-neutral-100"
				>
					Cancelar
				</a>
				<button
					type="submit"
					class="rounded-lg bg-blue-600 px-6 py-2 text-sm font-semibold text-white shadow-sm transition hover:bg-blue-700"
				>
					Guardar Cambios
				</button>
			</div>
		</form>

		<div class="mt-8 rounded-lg bg-yellow-100/70 p-4 text-sm text-yellow-800 shadow-sm">
			<p>
				<strong>Nota:</strong> Cambiar el tipo de producto (Hotel ↔ Tour ↔ Package) puede eliminar
				los detalles del subtipo anterior y crear el nuevo. Asegúrate de revisar los campos antes de
				guardar.
			</p>
		</div>
	</div>
</Layout>
