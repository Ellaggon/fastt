---
import ProductCard from "@/components/product/ProductCard.astro"
import SearchLayout from "@/layouts/SearchLayout.astro"
import { and, db, Destination, eq, Image, or, Product, Tour } from "astro:db"

type ProductResult = {
	id: string
	name: string
	shortDescription: string | null
	basePriceUSD: number | null
	basePriceBOB: number | null
	duration: string | null
	difficultyLevel: string | null
	imageUrl: string | null
}

const url = new URL(Astro.request.url)
const params = url.searchParams
const destinationId = params.get("destinationId") || params.get("destinationQuery") || null
const checkin = params.get("checkin") || null
const checkout = params.get("checkout") || null
const adults = params.get("adults") || "2"
const children = params.get("children") || "0"
const rooms = params.get("rooms") || "1"

let tours: ProductResult[] = []
let destination = null

if (destinationId) {
	// si nos pasan un slug o un id, intentamos resolverlo en Destination
	const possible = await db
		.select()
		.from(Destination)
		.where(or(eq(Destination.id, destinationId), eq(Destination.slug, destinationId)))
		.limit(1)
		.all()

	if (possible.length > 0) {
		destination = possible[0]
	}
}

try {
	const whereClause = destination
		? and(
				eq(Product.productType, "Tour"),
				or(
					eq(Product.destinationId, destination?.id),
					eq(Product.departmentId, destination?.department ?? destination?.id)
				)
			)
		: eq(Product.productType, "Tour")

	tours = await db
		.select({
			id: Product.id,
			name: Product.name,
			shortDescription: Product.shortDescription,
			basePriceUSD: Product.basePriceUSD,
			basePriceBOB: Product.basePriceBOB,
			duration: Tour.duration,
			difficultyLevel: Tour.difficultyLevel,
			imageUrl: Image.url,
		})
		.from(Product)
		.leftJoin(Tour, eq(Tour.productId, Product.id))
		.leftJoin(Image, and(eq(Image.entityId, Product.id), eq(Image.isPrimary, true)))
		.where(whereClause)
		.limit(50)
		.all()
} catch (err) {
	console.error("error querying hotels", err)
}
console.log("tours: ", tours)
---

<SearchLayout title="Resultados de búsqueda" producType="tours">
	<main class="mx-auto max-w-7xl p-6">
		<h1 class="mb-4 text-2xl font-bold">Resultados</h1>
		<p class="text-sm text-gray-600">
			Destino: {destination?.name ?? "Cualquier lugar"} — Fechas: {checkin ?? "-"} → {
				checkout ?? "-"
			}
		</p>
		<div class="mt-6 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
			{
				tours.length === 0 ? (
					<p class="col-span-full text-gray-500">No se encontraron hoteles para esos filtros.</p>
				) : (
					tours.map((t) => (
						<ProductCard
							name={t.name}
							href={`/hotels/${t.id}`}
							image={t.imageUrl || "https://picsum.photos/400/250"}
							alt={t.name}
							duration={t.duration || ""}
							difficultyLevel={t.difficultyLevel || ""}
							description={t.shortDescription || ""}
							priceUSD={t.basePriceUSD || 0}
							priceCLP={t.basePriceBOB || 0}
							services={[]}
						/>
					))
				)
			}
		</div>
	</main>
</SearchLayout>
