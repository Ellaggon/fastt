---
const activitiesList = [
	"Trekking",
	"City Tour",
	"Cultural",
	"Wildlife",
	"Adventure",
	"Gastronomy",
	"Water Activities",
	"Ski",
	"Cruise",
]

const durationOptions = [
	{ value: "lt1", label: "Medio día / <1 día" },
	{ value: "1", label: "1 día" },
	{ value: "2-3", label: "2-3 días" },
	{ value: "4-7", label: "4-7 días" },
	{ value: "8+", label: "8+ días" },
]

const levels = ["Fácil", "Moderado", "Difícil"]
const sortOptions = [
	{ value: "relevance", label: "Más relevantes" },
	{ value: "price_asc", label: "Precio: menor primero" },
	{ value: "price_desc", label: "Precio: mayor primero" },
	{ value: "duration_asc", label: "Duración: corta primero" },
	{ value: "rating_desc", label: "Mejor calificados" },
]
---

<div class="sticky top-0 z-40 mx-auto w-full max-w-4xl">
	<form
		id="tourSearchForm"
		action="/tours/search"
		method="get"
		class="grid grid-cols-1 gap-3 rounded-lg bg-white p-4 shadow md:grid-cols-3"
	>
		<!-- DESTINATION + hidden id -->
		<div class="col-span-1 md:col-span-1">
			<label for="destinationInput" class="mb-1 block text-sm font-medium text-gray-700"
				>Destino</label
			>
			<div class="relative text-gray-900">
				<input
					id="destinationInput"
					name="destinationQuery"
					autocomplete="off"
					type="search"
					class="w-full rounded border px-3 py-2"
					placeholder="Ciudad, región o parque..."
				/>
				<input type="hidden" name="destinationId" id="destinationId" />
				<ul
					id="destinationsList"
					class="absolute left-0 right-0 z-50 mt-1 hidden max-h-56 overflow-auto rounded border bg-white text-sm"
				>
				</ul>
			</div>
		</div>

		<!-- START DATE -->
		<div class="col-span-1 md:col-span-1">
			<label class="mb-1 block text-sm font-medium text-gray-700">Fecha de inicio</label>
			<input id="startDate" name="startDate" type="date" class="w-full rounded border px-3 py-2" />
		</div>

		<!-- DURATION -->
		<div class="col-span-1 md:col-span-1">
			<label class="mb-1 block text-sm font-medium text-gray-700">Duración</label>
			<select name="duration" id="duration" class="w-full rounded border px-3 py-2">
				<option value="">Cualquiera</option>
				{durationOptions.map((d) => <option value={d.value}>{d.label}</option>)}
			</select>
		</div>

		<!-- Activities (expandable, occupies full width on small screens) -->
		<div class="col-span-1 md:col-span-3">
			<label class="mb-1 block text-sm font-medium text-gray-700">Actividades</label>
			<div id="activitiesWrap" class="flex flex-wrap gap-2">
				{
					activitiesList.map((act) => (
						<label class="inline-flex items-center gap-2 rounded bg-gray-100 px-2 py-1 text-sm">
							<input type="checkbox" name="activities" value={act} class="h-4 w-4" />
							<span class="text-gray-700">{act}</span>
						</label>
					))
				}
			</div>
		</div>

		<!-- Level + Price range -->
		<div class="col-span-1 md:col-span-1">
			<label class="mb-1 block text-sm font-medium text-gray-700">Nivel</label>
			<select name="level" id="level" class="w-full rounded border px-3 py-2">
				<option value="">Cualquiera</option>
				{levels.map((l) => <option value={l}>{l}</option>)}
			</select>
		</div>

		<div class="col-span-1 md:col-span-1">
			<label class="mb-1 block text-sm font-medium text-gray-700">Precio (mín - máx)</label>
			<div class="flex gap-2">
				<input
					name="priceMin"
					type="number"
					min="0"
					placeholder="Min"
					class="w-1/2 rounded border px-3 py-2"
				/>
				<input
					name="priceMax"
					type="number"
					min="0"
					placeholder="Max"
					class="w-1/2 rounded border px-3 py-2"
				/>
			</div>
		</div>

		<div class="col-span-1 md:col-span-1">
			<label class="mb-1 block text-sm font-medium text-gray-700">Orden</label>
			<select name="sort" id="sort" class="w-full rounded border px-3 py-2">
				{sortOptions.map((s) => <option value={s.value}>{s.label}</option>)}
			</select>
		</div>

		<!-- Submit -->
		<div class="col-span-1 flex justify-end md:col-span-3">
			<button type="submit" class="rounded bg-blue-600 px-6 py-2 text-white shadow"
				>Buscar tours</button
			>
		</div>
	</form>
</div>

<script type="module">
	const qs = (s, el = document) => el.querySelector(s)
	const qsa = (s, el = document) => Array.from(el.querySelectorAll(s))

	function debounce(fn, wait = 200) {
		let t
		return (...args) => {
			clearTimeout(t)
			t = setTimeout(() => fn(...args), wait)
		}
	}

	// DESTINATIONS AUTOCOMPLETE (same pattern as HotelSearchPanel)
	async function fetchDestinations(q) {
		if (!q) return []
		const res = await fetch(`/api/destinations?q=${encodeURIComponent(q)}&limit=8`)
		if (!res.ok) return []
		return res.json()
	}

	function renderDestinations(listEl, items) {
		listEl.innerHTML = ""
		if (!items || items.length === 0) {
			listEl.classList.add("hidden")
			return
		}
		for (const d of items) {
			const li = document.createElement("li")
			li.tabIndex = 0
			li.className = "px-3 py-2 hover:bg-gray-100 cursor-pointer"
			li.dataset.id = d.id
			li.dataset.slug = d.slug || ""
			li.textContent = `${d.name}${d.department ? ", " + d.department : ""}${d.country ? " — " + d.country : ""}`
			listEl.appendChild(li)
		}
		listEl.classList.remove("hidden")
	}

	document.addEventListener("DOMContentLoaded", () => {
		const destInput = qs("#destinationInput")
		const destList = qs("#destinationsList")
		const destId = qs("#destinationId")

		const debouncedSearch = debounce(async (val) => {
			if (!val || val.trim().length < 1) {
				destList.classList.add("hidden")
				return
			}
			const items = await fetchDestinations(val.trim())
			renderDestinations(destList, items)
		}, 180)

		destInput.addEventListener("input", (e) => {
			destId.value = ""
			debouncedSearch(e.target.value)
		})

		destList.addEventListener("click", (ev) => {
			const li = ev.target.closest("li")
			if (!li) return
			destInput.value = li.textContent
			destId.value = li.dataset.id
			destList.classList.add("hidden")
		})

		document.addEventListener("click", (e) => {
			if (!e.target.closest("#destinationInput") && !e.target.closest("#destinationsList")) {
				destList.classList.add("hidden")
			}
		})
	})
</script>
