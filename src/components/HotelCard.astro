---
// src/components/HotelCard.astro
interface Hotel {
	name: string
	href: string
	image: string
	alt: string
	stars: number
	address: string
	description: string
	priceUSD?: number
	priceCLP?: number
	services: { name: string; free?: boolean; available: boolean }[]
}

interface Props {
	hotel: Hotel
}

const { hotel } = Astro.props

// Función para generar las estrellas
const renderStars = (count: number) => {
	let starIcons = ""
	for (let i = 0; i < count; i++) {
		starIcons += "★" // Unicode star character
	}
	return starIcons
}

// Mapeo simple de iconos (puedes reemplazar con SVGs de Heroicons o similar)
const serviceIcons: { [key: string]: string } = {
	"Estacionamiento": "🅿️",
	"Gimnasio": "🏋️",
	"Restaurante": "🍽️",
	"Bar": "🍷",
	"Piscina": "🏊",
	"Aire Acondicionado": "❄️",
	"SPA": "🧖‍♀️",
	"Internet - Habitación": "💻",
	"Internet - Wi-Fi": "📶",
	// Añade más según tus necesidades
}
---

<article
	class="flex h-full flex-col overflow-hidden rounded-xl bg-white shadow-md transition-shadow duration-300 hover:shadow-lg"
>
	<figure class="relative h-48 w-full overflow-hidden">
		<img
			src={hotel.image}
			alt={hotel.alt}
			width="290"
			height="183"
			class="h-full w-full object-cover object-center"
			loading="lazy"
		/>
	</figure>
	<div class="flex flex-grow flex-col p-5">
		<h3 class="mb-2 text-xl font-semibold text-gray-900">
			<a href={hotel.href} class="transition-colors hover:text-blue-600">
				{hotel.name}
				{
					hotel.stars > 0 && (
						<span
							class="ml-2 align-middle text-lg text-yellow-500"
							aria-label={`Calificación: ${hotel.stars} estrellas`}
						>
							{renderStars(hotel.stars)}
						</span>
					)
				}
			</a>
		</h3>
		<p class="mb-2 text-sm text-gray-600">{hotel.address}</p>
		<p class="mb-4 flex-grow text-sm text-gray-700">{hotel.description}</p>

		{
			(hotel.priceUSD || hotel.priceCLP) && (
				<ul class="mb-4 flex items-center justify-end font-semibold text-gray-800">
					{hotel.priceCLP && (
						<li class="mr-4 flex items-center">
							<span class="mr-1 text-xs">Desde</span>
							<span class="text-base text-blue-700">
								<span class="text-sm">CLP $</span>
								{hotel.priceCLP.toLocaleString("es-CL")}
							</span>
						</li>
					)}
					{hotel.priceUSD && (
						<li class="flex items-center">
							<span class="mr-1 text-xs">Desde</span>
							<span class="text-base text-blue-700">
								<span class="text-sm">US$</span>
								{hotel.priceUSD}
							</span>
						</li>
					)}
				</ul>
			)
		}

		{
			hotel.services.length > 0 && (
				<ul class="mb-4 flex flex-wrap gap-2 text-xs text-gray-700">
					{hotel.services
						.filter((s) => s.available)
						.map((service) => (
							<li class="flex items-center rounded-md bg-gray-50 px-2 py-1">
								<span class="mr-1" aria-hidden="true">
									{serviceIcons[service.name] || "•"}
								</span>
								<span>{service.name}</span>
								{service.free && <span class="ml-1 font-medium text-green-600">Gratis</span>}
							</li>
						))}
				</ul>
			)
		}

		<div class="mt-auto flex justify-end">
			<a
				href={hotel.href}
				class="inline-flex items-center rounded-md border border-transparent bg-blue-600 px-6 py-2 text-sm font-medium text-white shadow-sm transition-colors duration-200 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
			>
				Ver Hotel
			</a>
		</div>
	</div>
</article>
