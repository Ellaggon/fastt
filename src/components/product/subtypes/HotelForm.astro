---
import { iconItems } from "@/lib/utils/iconMaps"
const { productId } = Astro.props
---

<div class="space-y-3">
	<input type="hidden" name="productId" value={productId} />
	<input type="hidden" name="productType" value="hotel" />
	<label class="block text-sm">
		<span class="text-neutral-500">Estrellas</span>
		<select name="stars" id="stars" class="mt-1 w-24 rounded-md bg-neutral-100 px-2 py-1">
			<option value="">selecciona alguna opcion...</option>
			<option value="1">1</option>
			<option value="2">2</option>
			<option value="3">3</option>
			<option value="4">4</option>
			<option value="5">5</option>
		</select>
	</label>
	<label class="block text-sm">
		<span class="text-neutral-500">Dirección</span>
		<input type="text" name="address" class="mt-1 w-full rounded-md bg-neutral-100 px-2 py-1" />
	</label>
	<div class="grid grid-cols-2 gap-2">
		<input
			type="text"
			name="phone"
			placeholder="Teléfono"
			class="mt-1 rounded-md bg-neutral-100 px-2 py-1"
		/>
		<input
			type="email"
			name="email"
			placeholder="Email"
			class="mt-1 rounded-md bg-neutral-100 px-2 py-1"
		/>
	</div>

	<label class="block text-sm">
		<span class="text-neutral-500">Servicios</span>
		<div id="servicesContainer" class="mt-2 grid grid-cols-2 gap-2 sm:grid-cols-3">
			{
				iconItems.map((el) => (
					<button
						type="button"
						data-id={el.id}
						data-name={el.name}
						class="service-btn flex items-center gap-2 rounded-lg bg-neutral-100 px-3 py-2 text-sm shadow transition"
					>
						<el.icon class="h-4 w-4 text-blue-500 hover:bg-blue-100" />
						<small>{el.name}</small>
					</button>
				))
			}
		</div>
	</label>

	<div id="selectedServices" class="mt-3 flex flex-wrap gap-2"></div>

	<label class="block text-sm">
		<span class="text-neutral-500">Website</span>
		<input type="url" name="website" class="mt-1 w-full rounded-md bg-neutral-100 px-2 py-1" />
	</label>
	<div class="grid grid-cols-2 gap-2">
		<label class="block text-sm">
			<span class="text-neutral-500">Check-in</span>
			<input type="time" name="checkInTime" class="mt-1 rounded-md bg-neutral-100 px-2 py-1" />
		</label>
		<label class="block text-sm">
			<span class="text-neutral-500">Check-out</span>
			<input type="time" name="checkOutTime" class="mt-1 rounded-md bg-neutral-100 px-2 py-1" />
		</label>
	</div>
</div>
<script>
	const container = document.getElementById("servicesContainer")
	const selected = document.getElementById("selectedServices")

	const btns = container?.querySelectorAll<HTMLButtonElement>(".service-btn")

	btns?.forEach((btn) => {
		btn.addEventListener("click", () => {
			const id = btn.dataset.id
			const name = btn.dataset.name

			if (!id || !name || !selected) return

			const existingTag = selected.querySelector(`[data-id="${id}"]`)

			if (existingTag) {
				// Deseleccionar
				existingTag.remove()
				btn.classList.remove("bg-blue-100")
				const hidden = document.querySelector(`input[name="services[]"][value="${id}"]`)
				hidden?.remove()
				return
			}

			// Seleccionar
			btn.classList.add("bg-blue-100")

			// Crear etiqueta visual
			const tag = document.createElement("div")
			tag.dataset.id = id
			tag.className =
				"flex items-center gap-1 bg-blue-500 text-white rounded-full px-2 py-1 text-xs"
			tag.innerText = name
			selected.appendChild(tag)

			// Crear input oculto
			const hidden = document.createElement("input")
			hidden.type = "hidden"
			hidden.name = "services[]"
			hidden.value = id
			selected.appendChild(hidden)
		})
	})
</script>
